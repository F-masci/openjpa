/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 11 20:51:18 GMT 2025
 */

package org.apache.openjpa.lib.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.openjpa.lib.util.ClassUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ClassUtil_ESTest extends ClassUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ClassUtil.getClassName("[Ud]");
      assertEquals("d][]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getPlatformClassLoader();
      Class class0 = ClassUtil.toClass("float[]", classLoader0);
      assertEquals("class [F", class0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class class0 = ClassUtil.toClass("double", (ClassLoader) null);
      String string0 = ClassUtil.getPackageName(class0);
      assertEquals("double", class0.toString());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        ClassUtil.toClass((String) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // str == null
         //
         verifyException("org.apache.openjpa.lib.util.ClassUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassUtil.getPackageName("[[");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassUtil.getClassName("[[");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ClassUtil.getPackageName("java.lang");
      assertEquals("java", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ClassUtil.getPackageName("&p{EI5");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ClassUtil.getClassName("java.lang");
      assertEquals("lang", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        ClassUtil.toClass("tD<.p[]", true, classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // tD<.p
         //
         verifyException("org.apache.openjpa.lib.util.ClassUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        ClassUtil.toClass("+V", false, classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // +V
         //
         verifyException("org.apache.openjpa.lib.util.ClassUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = ClassUtil.getPackageName("['[][]");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = ClassUtil.getPackageName("['");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = ClassUtil.getPackageName("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = ClassUtil.getPackageName((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = ClassUtil.getPackageName((Class) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<String> class0 = String.class;
      String string0 = ClassUtil.getPackageName(class0);
      assertEquals("java.lang", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Object> class0 = Object.class;
      String string0 = ClassUtil.getClassName(class0);
      assertEquals("Object", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = ClassUtil.getClassName("[!A\";");
      assertEquals("A\"[]", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = ClassUtil.getClassName("['");
      assertEquals("['[]", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = ClassUtil.getClassName("['[6");
      assertEquals("[6[]", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = ClassUtil.getClassName("[I");
      assertEquals("int[]", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = ClassUtil.getClassName("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = ClassUtil.getClassName((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = ClassUtil.getClassName((Class) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Class class0 = ClassUtil.toClass("int", false, classLoader0);
      String string0 = ClassUtil.getClassName(class0);
      assertNotNull(string0);
      assertEquals("int", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getPlatformClassLoader();
      Class class0 = ClassUtil.toClass("int[]", false, classLoader0);
      assertEquals("class [I", class0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class class0 = ClassUtil.toClass("org.apache.openjpa.lib.util.ClassUtil", true, (ClassLoader) null);
      //  // Unstable assertion: assertEquals(17, class0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassUtil.toClass((String) null, false, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // str == null
         //
         verifyException("org.apache.openjpa.lib.util.ClassUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getPlatformClassLoader();
      // Undeclared exception!
      try { 
        ClassUtil.toClass("[o[]", classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [L[o;
         //
         verifyException("org.apache.openjpa.lib.util.ClassUtil", e);
      }
  }
}
